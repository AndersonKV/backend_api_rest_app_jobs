// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int    @id @default(autoincrement())
  name             String
  email            String @unique
  password         String
  confirm_password String

  created_at DateTime
  updated_at DateTime

  role EnumUserRole

  matchings Matching[]
  posts     Job[]

  @@map("users")
}

enum EnumUserRole {
  user
  company
}

model Job {
  id               Int                 @id @default(autoincrement())
  title            String
  remote           EnumRemote
  name_company     String
  id_author        Int
  techs            String
  types_contract   EnumTypesContract
  size_company     EnumSizeCompany
  experience_level EnumExperienceLevel
  expired_days     Int
  created_at       DateTime            @default(now())
  updated_at       DateTime            @default(now())
  salary           Int
  responsibilities String
  requirements     String
  benefits         String
  avatar           String

  matchings Matching[]
  User      User       @relation(fields: [id_author], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("jobs")
}

enum EnumRemote {
  sim
  nao
}

enum EnumTypesContract {
  clt
  pj
}

enum EnumSizeCompany {
  pequena
  media
  grande
}

enum EnumExperienceLevel {
  estagio
  junior
  pleno
  senior
}

model Matching {
  id Int @id @default(autoincrement())

  post      Job  @relation(fields: [id_job], references: [id], onDelete: Cascade, onUpdate: Cascade)
  matchings User @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade)

  id_user   Int
  id_job    Int
  id_author Int

  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  @@map("matchings")
}
